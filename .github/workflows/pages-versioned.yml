name: Publish versioned docs to Pages

on:
  push:
    branches: [ main ]          # Publishes to /latest
    tags:
      - 'V*'                    # Publishes to /VYYYY_MM (e.g., V2025_10)

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source (main/tag)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set VERSION env (latest or tag name)
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          else
            echo "VERSION=latest" >> $GITHUB_ENV
          fi

      # If you have a build, do it here and output into ./site
      # Otherwise copy the repo content as-is.
      - name: Prepare site files
        run: |
          rm -rf site && mkdir -p site
          rsync -a --delete \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'node_modules' \
            ./ site/

      - name: Checkout versions branch (versions_branch)
        uses: actions/checkout@v4
        with:
          ref: versions_branch
          path: ghp
          fetch-depth: 0

      - name: Ensure jq is available
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y jq
          fi

      # Optional: keep a nice landing page at the site root.
      # If you commit root-page/index.html in main, we'll copy it over.
      - name: Update root landing page (if present in repo)
        run: |
          mkdir -p ghp
          if [[ -f root-page/index.html ]]; then
            cp root-page/index.html ghp/index.html
          fi

      - name: Ensure versions.json exists
        run: |
          mkdir -p ghp
          if [[ ! -f ghp/versions.json ]]; then
            echo '{"default":"latest","versions":["latest"]}' > ghp/versions.json
          fi

      - name: Copy site into version folder
        run: |
          mkdir -p "ghp/${VERSION}"
          rsync -a --delete site/ "ghp/${VERSION}/"

      # Replace the placeholder in the published index.md of this version
      - name: Replace [[RELEASE]] placeholder with version
        run: |
          file="ghp/${VERSION}/index.md"
          if [[ -f "$file" ]]; then
            label="${VERSION}"
            [[ "$VERSION" == "latest" ]] && label="main branch (latest)"
            sed -i "s/\[\[RELEASE\]\]/${label}/g" "$file"
          fi

      # Keep the dropdown consistent: latest first, then tags (desc)
      - name: Update versions.json
        run: |
          cd ghp
          jq --arg v "$VERSION" '
            .versions as $vs
            | ($vs + [$v]) | unique
            | . as $all
            | { default: "latest",
                versions: ( ["latest"] + ($all - ["latest"]) | sort | reverse )
              }
          ' versions.json > versions.new.json \
          || echo '{"default":"latest","versions":["latest","'"$VERSION"'"]}' > versions.new.json
          mv versions.new.json versions.json

      - name: Commit and push to versions_branch
        run: |
          cd ghp
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Publish ${VERSION} [skip ci]" || echo "No changes to commit"
          git push origin HEAD:versions_branch
